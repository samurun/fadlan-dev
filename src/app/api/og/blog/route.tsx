import { NextRequest } from 'next/server';
import { ImageResponse } from 'next/og';
import { siteConfig } from '@/config/site';

export const runtime = 'edge';

const interBold = fetch(
  new URL('../../../../assets/fonts/Inter-Bold.ttf', import.meta.url)
).then((res) => res.arrayBuffer());

export async function GET(req: NextRequest) {
  try {
    const fontBold = await interBold;

    const { searchParams } = req.nextUrl;
    const title = searchParams.get('title') || '';

    if (!title) {
      return new Response('No titie provided', {
        status: 500,
      });
    }

    const heading =
      title.length > 140 ? `${title.substring(0, 140)}...` : title;

    return new ImageResponse(
      (
        <div
          style={{
            background:
              'linear-gradient(45deg, rgb(254, 100, 146), rgb(255, 140, 140))',
          }}
          tw='flex relative flex-col p-12 w-full h-full items-start text-white'
        >
          <div tw='flex items-center'>
            <svg
              width='24'
              height='24'
              viewBox='0 0 24 24'
              fill='none'
              xmlns='http://www.w3.org/2000/svg'
            >
              <rect width='24' height='24' rx='4' fill='white' />
              <g clip-path='url(#clip0_2_23)'>
                <path
                  d='M16.1211 8.0849C14.5788 8.0849 13.2626 9.1473 12.7554 10.6323H11.1441C10.6367 9.14751 9.32203 8.0849 7.77816 8.0849C6.2337 8.0849 4.91981 9.1473 4.41266 10.6323H3.31063C3.23237 10.6323 3.15731 10.666 3.10197 10.726C3.04663 10.7861 3.01554 10.8674 3.01554 10.9523C3.01554 11.0372 3.04663 11.1186 3.10197 11.1786C3.15731 11.2386 3.23237 11.2723 3.31063 11.2723H4.24741C4.20807 11.5023 4.18446 11.7374 4.18446 11.9806C4.18446 14.1288 5.79561 15.8765 7.77679 15.8765C9.75797 15.8765 11.3693 14.1291 11.3693 11.9808C11.3693 11.7399 11.3457 11.5034 11.3064 11.2725H12.589C12.5497 11.5025 12.526 11.7376 12.526 11.9808C12.526 14.1291 14.1372 15.8767 16.1184 15.8767C18.0993 15.8767 19.7109 14.1293 19.7109 11.9808C19.7109 11.7399 19.6873 11.5034 19.6479 11.2725H20.5847C20.663 11.2725 20.738 11.2388 20.7934 11.1788C20.8488 11.1188 20.8798 11.0374 20.8798 10.9525C20.8798 10.8677 20.8488 10.7863 20.7934 10.7262C20.738 10.6662 20.663 10.6325 20.5847 10.6325H19.4827C18.9756 9.14773 17.6607 8.08511 16.117 8.08511L16.1211 8.0849ZM7.77816 15.2358C6.12374 15.2358 4.77581 13.7741 4.77581 11.9799C4.77581 10.1858 6.12374 8.72405 7.77816 8.72405C9.4326 8.72405 10.7805 10.1858 10.7805 11.9799C10.7805 13.7741 9.4326 15.2358 7.77816 15.2358ZM16.1211 15.2358C14.4667 15.2358 13.1188 13.7741 13.1188 11.9799C13.1188 10.1858 14.4667 8.72405 16.1211 8.72405C17.7755 8.72405 19.1234 10.1858 19.1234 11.9799C19.1234 13.7741 17.7755 15.2358 16.1211 15.2358Z'
                  fill='black'
                />
                <path
                  d='M16.7189 10.1649C16.6029 10.039 16.416 10.039 16.3017 10.1649L14.4191 12.2065C14.303 12.3324 14.303 12.535 14.4191 12.659C14.4759 12.7208 14.5529 12.7533 14.6272 12.7533C14.702 12.7533 14.7787 12.7215 14.8355 12.659L16.7182 10.6174C16.8342 10.4915 16.8342 10.2891 16.7182 10.1649H16.7189ZM17.5812 10.7567L16.4894 11.9407C16.3733 12.0665 16.3733 12.2692 16.4894 12.3934C16.5166 12.4232 16.549 12.4468 16.5848 12.463C16.6205 12.4791 16.6588 12.4874 16.6975 12.4874C16.7362 12.4874 16.7745 12.4791 16.8102 12.463C16.846 12.4468 16.8784 12.4232 16.9056 12.3934L17.9977 11.2094C18.1137 11.0835 18.1137 10.8808 17.9977 10.7567C17.9704 10.7268 17.9379 10.703 17.9021 10.6868C17.8664 10.6705 17.8279 10.6622 17.7891 10.6622C17.7503 10.6622 17.7119 10.6705 17.6761 10.6868C17.6403 10.703 17.6079 10.7268 17.5806 10.7567H17.5812ZM8.29141 10.1649C8.17534 10.039 7.98846 10.039 7.87416 10.1649L5.99154 12.2065C5.87547 12.3324 5.87547 12.535 5.99154 12.659C6.04839 12.7208 6.12532 12.7533 6.19968 12.7533C6.27404 12.7533 6.35114 12.7215 6.408 12.659L8.29063 10.6174C8.40668 10.4915 8.40668 10.2891 8.29063 10.1649H8.29141ZM9.15147 10.7567L8.05967 11.9407C7.94361 12.0665 7.94361 12.2692 8.05967 12.3934C8.08692 12.4232 8.11935 12.4468 8.15507 12.463C8.19079 12.4791 8.2291 12.4874 8.2678 12.4874C8.3065 12.4874 8.34482 12.4791 8.38054 12.463C8.41626 12.4468 8.44869 12.4232 8.47594 12.3934L9.56793 11.2094C9.684 11.0835 9.684 10.8808 9.56793 10.7567C9.54067 10.7268 9.50819 10.703 9.4724 10.6868C9.43661 10.6705 9.3982 10.6622 9.35941 10.6622C9.32061 10.6622 9.28221 10.6705 9.24641 10.6868C9.21062 10.703 9.17815 10.7268 9.15088 10.7567H9.15147Z'
                  fill='black'
                />
              </g>
            </svg>

            <p tw='ml-2 font-bold text-2xl'>{siteConfig.name}</p>
          </div>
          <div tw='flex flex-col justify-center flex-1 py-10'>
            <div tw='flex text-xl uppercase font-bold tracking-tight font-normal'>
              BLOG POST
            </div>
            <p tw='text-5xl font-bold'>
              {heading ||
                'Welcome to my blog template. Built using tailwind, shadcn, velite and Nextjs 14.'}
            </p>
            <p>{}</p>
          </div>
          <div tw='flex items-center w-full '>
            <div tw='flex'>{siteConfig.links.personalSite}</div>
          </div>
        </div>
      ),
      {
        width: 1200,
        height: 630,
        fonts: [
          {
            name: 'Inter',
            data: fontBold,
            style: 'normal',
            weight: 700,
          },
        ],
      }
    );
  } catch (error) {
    return new Response('Failed to generate image', {
      status: 500,
    });
  }
}
