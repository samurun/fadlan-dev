import { NextRequest } from 'next/server';
import { ImageResponse } from 'next/og';

export const runtime = 'edge';

const interBold = fetch(
  new URL('../../../assets/fonts/Inter-Bold.ttf', import.meta.url)
).then((res) => res.arrayBuffer());

export async function GET(req: NextRequest) {
  try {
    const fontBold = await interBold;

    const { searchParams } = req.nextUrl;
    const title = searchParams.get('title');

    if (!title) {
      return new Response('No titie provided', {
        status: 500,
      });
    }

    const heading =
      title.length > 140 ? `${title.substring(0, 140)}...` : title;

    return new ImageResponse(
      (
        <div tw='flex relative flex-col p-12 w-full h-full items-start text-black bg-white'>
          <div tw='flex items-center'>
            <svg width='24' height='10' viewBox='0 0 24 10' fill='none'>
              <path
                d='M17.4948 0.0996704C15.4385 0.0996704 13.6835 1.34684 13.0072 3.09011H10.8588C10.1823 1.34709 8.4294 0.0996704 6.37091 0.0996704C4.31163 0.0996704 2.55977 1.34684 1.88357 3.09011H0.414195C0.309846 3.09011 0.209774 3.12969 0.135989 3.20014C0.0622039 3.2706 0.020752 3.36614 0.020752 3.46577C0.020752 3.56539 0.0622039 3.66094 0.135989 3.73139C0.209774 3.80184 0.309846 3.84142 0.414195 3.84142H1.66324C1.61078 4.11138 1.57931 4.38737 1.57931 4.67287C1.57931 7.19473 3.7275 9.2463 6.36908 9.2463C9.01065 9.2463 11.1591 7.195 11.1591 4.67311C11.1591 4.39038 11.1276 4.11264 11.0752 3.84166H12.7853C12.7329 4.11164 12.7014 4.38762 12.7014 4.67311C12.7014 7.195 14.8496 9.24655 17.4912 9.24655C20.1325 9.24655 22.2813 7.19524 22.2813 4.67311C22.2813 4.39038 22.2498 4.11264 22.1973 3.84166H23.4463C23.5507 3.84166 23.6507 3.80209 23.7246 3.73163C23.7984 3.6612 23.8397 3.56565 23.8397 3.46601C23.8397 3.36639 23.7984 3.27084 23.7246 3.20039C23.6507 3.12993 23.5507 3.09036 23.4463 3.09036H21.9769C21.3008 1.34734 19.5476 0.0999206 17.4893 0.0999206L17.4948 0.0996704ZM6.37091 8.49425C4.16501 8.49425 2.36777 6.77827 2.36777 4.67212C2.36777 2.56595 4.16501 0.849973 6.37091 0.849973C8.57682 0.849973 10.3741 2.56595 10.3741 4.67212C10.3741 6.77827 8.57682 8.49425 6.37091 8.49425ZM17.4948 8.49425C15.289 8.49425 13.4917 6.77827 13.4917 4.67212C13.4917 2.56595 15.289 0.849973 17.4948 0.849973C19.7007 0.849973 21.4979 2.56595 21.4979 4.67212C21.4979 6.77827 19.7007 8.49425 17.4948 8.49425Z'
                fill='currentColor'
              />
              <path
                d='M18.292 2.54143C18.1372 2.39366 17.888 2.39366 17.7356 2.54143L15.2255 4.93809C15.0707 5.08583 15.0707 5.32375 15.2255 5.46926C15.3013 5.54187 15.4038 5.57994 15.503 5.57994C15.6026 5.57994 15.7049 5.54262 15.7808 5.46926L18.2909 3.0726C18.4457 2.92483 18.4457 2.68718 18.2909 2.54143H18.292ZM19.4416 3.23612L17.9859 4.62603C17.8311 4.77379 17.8311 5.01171 17.9859 5.15747C18.0222 5.19244 18.0654 5.2202 18.1131 5.23915C18.1607 5.2581 18.2118 5.26785 18.2634 5.26785C18.315 5.26785 18.3661 5.2581 18.4137 5.23915C18.4613 5.2202 18.5045 5.19244 18.5409 5.15747L19.9969 3.76755C20.1516 3.61979 20.1516 3.38187 19.9969 3.23612C19.9606 3.201 19.9173 3.1731 19.8695 3.15406C19.8219 3.13501 19.7705 3.12521 19.7188 3.12521C19.6671 3.12521 19.6159 3.13501 19.5682 3.15406C19.5205 3.1731 19.4772 3.201 19.4408 3.23612H19.4416ZM7.05524 2.54143C6.90048 2.39366 6.65131 2.39366 6.49891 2.54143L3.98875 4.93809C3.83399 5.08583 3.83399 5.32375 3.98875 5.46926C4.06455 5.54187 4.16712 5.57994 4.26627 5.57994C4.36541 5.57994 4.46822 5.54262 4.54404 5.46926L7.0542 3.0726C7.20894 2.92483 7.20894 2.68718 7.0542 2.54143H7.05524ZM8.20199 3.23612L6.74625 4.62603C6.59151 4.77379 6.59151 5.01171 6.74625 5.15747C6.78259 5.19244 6.82583 5.2202 6.87345 5.23915C6.92108 5.2581 6.97217 5.26785 7.02377 5.26785C7.07537 5.26785 7.12646 5.2581 7.17408 5.23915C7.22171 5.2202 7.26495 5.19244 7.30128 5.15747L8.75728 3.76755C8.91204 3.61979 8.91204 3.38187 8.75728 3.23612C8.72092 3.201 8.67762 3.1731 8.6299 3.15406C8.58217 3.13501 8.53097 3.12521 8.47925 3.12521C8.42751 3.12521 8.37631 3.13501 8.32858 3.15406C8.28086 3.1731 8.23756 3.201 8.2012 3.23612H8.20199Z'
                fill='currentColor'
              />
            </svg>
            <p tw='ml-2 font-bold text-2xl'>FadlanBlog</p>
          </div>
          <div tw='flex flex-col flex-1 py-10'>
            <div tw='flex text-xl uppercase font-bold tracking-tight font-normal'>
              BLOG POST
            </div>
            <div tw='flex text-[80px] font-bold text-[50px]'>{heading}</div>
          </div>
          <div tw='flex items-center w-full justify-between'>
            <div tw='flex text-xl'>{process.env.NEXT_PUBLIC_APP_URL}</div>
            <div tw='flex items-center text-xl'>
              <div tw='flex ml-2'>{process.env.NEXT_PUBLIC_GITHUB_URL}</div>
            </div>
          </div>
        </div>
      ),
      {
        width: 1200,
        height: 630,
        fonts: [
          {
            name: 'Inter',
            data: fontBold,
            style: 'normal',
            weight: 700,
          },
        ],
      }
    );
  } catch (error) {
    return new Response('Failed to generate image', {
      status: 500,
    });
  }
}
